# This is a Github Workflow that runs tests on any push or pull request.
# If the tests pass and this is a push to the master branch it also runs Semantic Release.
name: CI
on: [push, pull_request]
jobs:
  build:
    name: build
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Fetch deps
        run: yarn

      - name: Build target
        run: yarn build

      - name: Save target to artifact
        uses: actions/upload-artifact@v3
        with:
          name: target
          retention-days: 1
          path: |
            target
            buildstamp.json
            renovate.json

  push:
    name: push
    needs: build
    if: github.event_name == 'push'
    runs-on: ubuntu-22.04
    permissions:
      checks: read
      statuses: write
      contents: write
      packages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: ${{ github.ref == 'refs/heads/master' && '0' || '1' }}

      - name: Restore target
        uses: actions/download-artifact@v3
        with:
          name: target

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Fetch deps
        run: yarn

      - name: Unit tests
        run: yarn test:unit

      - name: Codeclimate
        if: github.ref == 'refs/heads/master'
        uses: paambaati/codeclimate-action@v5.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageLocations: |
            ${{github.workspace}}/target/coverage/lcov.info:lcov

      - name: Semantic Release
        if: github.ref == 'refs/heads/master'
        env:
          GH_USER: '@antongolub'
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_PROVENANCE: true
          GIT_AUTHOR_EMAIL: 'antongolub@antongolub.com'
          GIT_COMMITTER_EMAIL: 'antongolub@antongolub.com'
          GIT_AUTHOR_NAME: 'Anton Golub'
          GIT_COMMITTER_NAME: 'Anton Golub'
        run: npm_config_yes=true npx zx-semrel

  pr:
    if: github.event_name == 'pull_request'
    needs: build
    name: PR (Node v${{ matrix.node-version }}, OS ${{ matrix.os }})
    strategy:
      matrix:
        os: [ windows-2019, ubuntu-22.04 ]
        node-version: [ 10, 12, 14, 16, 20 ]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore target
        uses: actions/download-artifact@v3
        with:
          name: target

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Integration tests
        if: matrix.node-version != '16' || matrix.os != 'ubuntu-22.04'
        run: |
          yarn install --production --ignore-engines
          yarn test:it

      - name: Full test suite
        if: matrix.node-version == '16' && matrix.os == 'ubuntu-22.04'
        run: |
          yarn
          yarn test
